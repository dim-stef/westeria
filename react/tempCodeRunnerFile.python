from math import log,exp,pow
import datetime
epoch = datetime.datetime(1970, 1, 1)

def calculate_score(votes,spreads, item_hour_age, gravity=1.8):
    spread_points = sigmoid(spreads)
    vote_points = log(max(votes,1),10)
    order = spread_points + vote_points
    return order / pow((item_hour_age+2), gravity)


def epoch_seconds(date):
    td = date - epoch
    return td.days * 86400 + td.seconds + (float(td.microseconds) / 1000000)

def hot(ups, date):
    s = ups * 10
    order = log(max(abs(s), 1), 10)
    print(order)
    seconds = epoch_seconds(date) - 1134028003
    return round(order + seconds / 5000, 7)

def getdatescore(date):
    seconds = epoch_seconds(date) - 1134028003
    return seconds / 500000

def sigmoid(x):
  return 1 / (1 + exp(-log(max(x,1),10)))

order = log(max(15, 1), 10)
order = log(max(15, 1), 2)
print(order)
dt = datetime.datetime(2019, 5, 1)
data = ([0,0],[10,0],[0,1],[10,2],[100,10])
data2 = (    
[0,0,datetime.datetime(2019, 5, 1)],
[1,1,datetime.datetime(2019, 5, 2)],
[3,3,datetime.datetime(2019, 5, 3)],
[10,10,datetime.datetime(2019, 5, 1)],
[100,100,datetime.datetime(2019, 4, 2)],
[1000,1000,datetime.datetime(2019, 5, 8)],
[10000,10000,datetime.datetime(2019, 5, 15)],
[1,1,datetime.datetime.now()])
datenow = datetime.datetime.now()
for i,item in enumerate(data2):
    seconds = getdatescore(datetime.datetime.now())
    #print(calculate_score(data2[0],data2[2]))
    #print(item[2].hour,datenow)
    diff = abs(item[2] - datenow).total_seconds() // 3600
    print(item,calculate_score(item[0],item[1],diff))
    '''score_like = log(max(item[0], 1), 10)
    score_share1 = i * log(max(item[1], 1), 2)
    score_share2 = sigmoid(item[1])
    print(seconds,score_like, score_share1,score_share2*50 - 25)'''


end = datetime.datetime(2019, 6, 30, 23, 59, 59)
step = datetime.timedelta(seconds=5)

result = []

'''while dt < end:
    result.append(dt.strftime('%Y-%m-%d %H:%M:%S'))
    dt += step'''
print(data2)